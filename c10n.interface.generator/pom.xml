<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.alpharogroup</groupId>
  <artifactId>c10n.interface.generator</artifactId>
  <version>1.0.0</version>

	<properties>
		<!-- PROJECT encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- JAULP versions -->
		<jaulp.core.version>3.9.0-SNAPSHOT</jaulp.core.version>
		<jaulp.lang.version>${jaulp.core.version}</jaulp.lang.version>
		<jaulp.xml.version>${jaulp.core.version}</jaulp.xml.version>
		<!-- EXTERNAL LIBRARIES versions -->
		<velocity.version>1.7</velocity.version>
		<c10n.version>1.1</c10n.version>
		<!-- LOGGING versions -->
		<slf4j-api.version>1.6.4</slf4j-api.version>
		<slf4j-log4j12.version>1.6.4</slf4j-log4j12.version>
		<log4j.version>1.2.16</log4j.version>
		<!-- UNIT TEST versions -->
		<testng.version>6.8.8</testng.version>
		<!-- MAVEN PLUGIN versions -->
		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
		<maven-compiler-plugin.source.version>1.7</maven-compiler-plugin.source.version>
		<maven-compiler-plugin.target.version>1.7</maven-compiler-plugin.target.version>
		<maven-compiler-plugin.encoding>UTF-8</maven-compiler-plugin.encoding>
		<maven-compiler-plugin.optimize>true</maven-compiler-plugin.optimize>
		<maven-compiler-plugin.debug>true</maven-compiler-plugin.debug>
		<maven-source-plugin.version>2.2.1</maven-source-plugin.version>
		<maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
		<maven-surefire-plugin.version>2.15</maven-surefire-plugin.version>
		<license-maven-plugin.version>2.5</license-maven-plugin.version>
		<maven-gpg-plugin.version>1.4</maven-gpg-plugin.version>
		<!-- GITHUB VARIABLE FOR MAVEN PLUGIN com.github.github. Github maven repository. -->
		<github.global.server>github</github.global.server>
	</properties>


	<dependencies>

		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${velocity.version}</version>
		</dependency>

		<dependency>
			<groupId>de.alpharogroup</groupId>
			<artifactId>jaulp.lang</artifactId>
			<version>${jaulp.lang.version}</version>
		</dependency>

		<dependency>
			<groupId>de.alpharogroup</groupId>
			<artifactId>jaulp.xml</artifactId>
			<version>${jaulp.xml.version}</version>
		</dependency>

		<dependency>
			<groupId>c10n</groupId>
			<artifactId>c10n-core</artifactId>
			<version>${c10n.version}</version>
		</dependency>
		<!-- optional c10n tools module -->
		<dependency>
			<groupId>c10n</groupId>
			<artifactId>c10n-tools</artifactId>
			<version>${c10n.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>

		<resources>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/generated</directory>
			</resource>

			<resource>
				<directory>src/main/resources</directory>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/site</directory>
			</resource>

		</resources>

		<testResources>

			<testResource>
				<filtering>false</filtering>
				<directory>src/test/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>


			<testResource>
				<directory>src/test/resources</directory>
			</testResource>

		</testResources>

		<plugins>

			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven-compiler-plugin.source.version}</source>
					<target>${maven-compiler-plugin.target.version}</target>
					<encoding>${maven-compiler-plugin.encoding}</encoding>
					<optimize>${maven-compiler-plugin.optimize}</optimize>
					<debug>${maven-compiler-plugin.debug}</debug>
				</configuration>
			</plugin>

			<!-- Configuring Maven Source Plugin: To attach source artifacts to your 
				build we execute the source:jar goal from the source plugin during the package 
				phase. -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>

		</plugins>

	</build>

	<repositories>

		<repository>
			<id>c10n-releases</id>
			<name>C10N Releases</name>
			<url>https://raw.github.com/rodionmoiseev/c10n/master/c10n-mvn-repo/releases</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>

		<repository>
			<id>googlecode</id>
			<url>http://jqwicket.googlecode.com/svn/m2-repo/releases/</url>
		</repository>

		<repository>
			<id>jaulp.core-mvn-repo</id>
			<url>https://raw.github.com/astrapi69/jaulp.core/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>

		<repository>
			<id>Apache Nexus</id>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>repository.jboss.org-public</id>
			<name>JBoss repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
		</repository>

	</repositories>

	<distributionManagement>

		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>

	</distributionManagement>

	<profiles>

		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release-javadoc-jar-with-dependencies</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- Configuring Maven Javadoc Plugin: To attach javadoc artifacts to 
						your build we execute the javadoc:jar goal from the javadoc plugin. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<!-- NOTE: We don't need a groupId specification because the group 
							is org.apache.maven.plugins ...which is assumed by default. -->
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<!-- this is used for inheritance merges -->
								<phase>package</phase>
								<!-- append to the packaging phase. -->
								<goals>
									<goal>attached</goal>
									<!-- goals == mojos -->
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>

</project>
